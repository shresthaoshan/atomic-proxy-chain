name: Check & Release

on:
  # Push to master will deploy a beta version
  push:
    branches:
      - release/*
  # A release via GitHub releases will deploy a latest version
  release:
    types: [published]

jobs:
  build_and_test:
    name: Build & Test
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-22.04]
        node-version: [14, 16, 18]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache Node Modules
        if: ${{ matrix.node-version == 18 }}
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            dist
          key: cache-release-${{ github.ref }}-${{ github.run_id }}
      - name: Install Dependencies
        run: npm install
      - name: Run Tests
        run: npm test
      - name: Build
        if: ${{ matrix.node-version == 18 }}
        run: npm run build

  lint:
    name: Lint
    needs: [build_and_test]
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Load Cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            dist
          key: cache-release-${{ github.ref }}-${{ github.run_id }}
      - run: npm run lint

  release:
    name: Create GitHub Release
    needs: [lint]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Load Cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            dist
          key: cache-release-${{ github.ref }}-${{ github.run_id }}
      - name: Create Release Asset
        run: tar -czf release.tgz dist
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            See [CHANGELOG.md](CHANGELOG.md) for details.
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release.tgz
          asset_name: release.tgz
          asset_content_type: application/gzip
